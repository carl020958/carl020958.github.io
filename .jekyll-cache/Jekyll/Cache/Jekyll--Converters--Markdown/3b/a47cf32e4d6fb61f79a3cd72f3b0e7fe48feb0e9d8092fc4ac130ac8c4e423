I"o<hr />

<h3 id="pandas">Pandas</h3>
<ul>
  <li>Aggregating dataframe
    <ul>
      <li>pandas Series인 상태로 계산하면 계산값이 int/float 형태로, pandas Dataframe 상태로 계산하면 dataframe으로 반환
        <ul>
          <li><code class="language-plaintext highlighter-rouge">.mean()</code> - 평균</li>
          <li><code class="language-plaintext highlighter-rouge">.median()</code> - 중위값</li>
          <li><code class="language-plaintext highlighter-rouge">.mode()</code> - 최빈값</li>
          <li><code class="language-plaintext highlighter-rouge">.max()</code> - 최대값</li>
          <li><code class="language-plaintext highlighter-rouge">.min()</code> - 최소값</li>
          <li><code class="language-plaintext highlighter-rouge">.var()</code> - 분산</li>
          <li><code class="language-plaintext highlighter-rouge">.std()</code> - 표준편차</li>
          <li><code class="language-plaintext highlighter-rouge">.sum()</code> - 합</li>
          <li><code class="language-plaintext highlighter-rouge">.quantile()</code> - 분위수</li>
          <li><code class="language-plaintext highlighter-rouge">.agg()</code> - custom function 사용이 가능하게 함</li>
        </ul>
      </li>
      <li>dataframe으로 반환
        <ul>
          <li><code class="language-plaintext highlighter-rouge">.cumsum()</code> - 누적 합</li>
          <li><code class="language-plaintext highlighter-rouge">.cummax()</code> - 누적 중 최대값</li>
          <li><code class="language-plaintext highlighter-rouge">.cummin()</code> - 누적 중 최소값</li>
          <li><code class="language-plaintext highlighter-rouge">.cummprod()</code> - 누적 곱</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>unique
    <ul>
      <li><code class="language-plaintext highlighter-rouge">.drop_duplicates()</code></li>
    </ul>
  </li>
  <li>group_by
    <ul>
      <li><code class="language-plaintext highlighter-rouge">.groupby()</code></li>
    </ul>
  </li>
  <li>pivot
    <ul>
      <li><code class="language-plaintext highlighter-rouge">.pivot_table</code></li>
    </ul>
  </li>
</ul>
:ET