I"2<hr />
<h3 id="docker">Docker</h3>
<ul>
  <li>Docker 관련 명령어 정리</li>
</ul>

<hr />

<h3 id="docker-관련-명령어">Docker 관련 명령어</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 로그인
</span><span class="n">docker</span> <span class="n">login</span>

<span class="c1"># 터미널에서 docker desktop 실행
</span><span class="nb">open</span> <span class="o">-</span><span class="n">a</span> <span class="n">docker</span>

<span class="c1"># image 설치는 docker hub에 접속해서 설치를 희망하는 image의 명령어(pull)를 사용하면 됨
</span><span class="n">docker</span> <span class="n">pull</span> <span class="n">mysql</span>

<span class="c1"># 설치되어 있는 이미지 보기
</span><span class="n">docker</span> <span class="n">images</span>

<span class="c1"># 컨테이너 생성 (docker run --name [name_of_container] [image])
</span><span class="n">docker</span> <span class="n">run</span> <span class="o">--</span><span class="n">name</span> <span class="n">ws2</span> <span class="n">httpd</span>

<span class="c1"># 기존의 존재하는 컨테이너 실행 (docker start [name_of_container/ container_id]
</span><span class="n">docker</span> <span class="n">start</span> <span class="n">ws2</span>

<span class="c1"># 컨테이너의 로그 보기, 옵션으로 -f 주면 실시간으로 로그 확인 가능 (docker logs -f [name_of_container])
</span><span class="n">docker</span> <span class="n">logs</span> <span class="o">-</span><span class="n">f</span> <span class="n">ws2</span>

<span class="c1"># 컨테이너 보기, -a 옵션을 통해 모든 컨테이너 다 볼 수 있음, default는 실행중인 컨테이너만 표시
</span><span class="n">docker</span> <span class="n">ps</span>

<span class="c1"># 컨테이너 실행 종료 (docker stop [name_of_container/ container_id])
</span><span class="n">docker</span> <span class="n">stop</span> <span class="n">a2</span>

<span class="c1"># 컨테이너 삭제 (docker rm [name_of_container/ container_id])
</span><span class="n">docker</span> <span class="n">rm</span> <span class="n">a2</span>

<span class="c1"># 이미지 삭제 (docker rmi [image_id])
</span><span class="n">docker</span> <span class="n">rmi</span> <span class="n">httpd</span>

</code></pre></div></div>

<h3 id="mysql--postgresql-in-docker">MySQL &amp; PostgreSQL in Docker</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># mysql 컨테이너 생성, -p 옵션으로 포트 지정/ 컨테이너 이미지에서 사용할 포트, -e로 환경변수 설정, -d는 백그라운드로 실행한다는 의미
</span><span class="n">docker</span> <span class="n">run</span> <span class="o">-</span><span class="n">p</span> <span class="mi">3306</span><span class="p">:</span><span class="mi">3306</span> <span class="o">--</span><span class="n">name</span> <span class="n">mysql1</span> <span class="o">-</span><span class="n">e</span> <span class="n">MYSQL_ROOT_PASSWORD</span><span class="o">=</span><span class="mi">1234</span> <span class="o">-</span><span class="n">e</span> <span class="n">MYSQL_DATABASE</span><span class="o">=</span><span class="n">first_db</span> <span class="o">-</span><span class="n">e</span> <span class="n">MYSQL_USER</span><span class="o">=</span><span class="n">carl020958</span> <span class="o">-</span><span class="n">e</span> <span class="n">MYSQL_PASSWORD</span><span class="o">=</span><span class="mi">1234</span> <span class="o">-</span><span class="n">d</span> <span class="n">mysql</span><span class="p">:</span><span class="n">latest</span>

<span class="c1"># apple silicon
</span><span class="n">docker</span> <span class="n">run</span> <span class="o">--</span><span class="n">platform</span> <span class="n">linux</span><span class="o">/</span><span class="n">amd64</span> <span class="o">-</span><span class="n">p</span> <span class="mi">3306</span><span class="p">:</span><span class="mi">3306</span> <span class="o">--</span><span class="n">name</span> <span class="n">todolist</span> <span class="o">-</span><span class="n">e</span> <span class="n">MYSQL_ROOT_PASSWORD</span><span class="o">=</span><span class="mi">1234</span> <span class="o">-</span><span class="n">e</span> <span class="n">MYSQL_DATABASE</span><span class="o">=</span><span class="n">dbname</span> <span class="o">-</span><span class="n">e</span> <span class="n">MYSQL_USER</span><span class="o">=</span><span class="n">carl020958</span> <span class="o">-</span><span class="n">e</span> <span class="n">MYSQL_PASSWORD</span><span class="o">=</span><span class="mi">1234</span> <span class="o">-</span><span class="n">d</span> <span class="n">mysql</span><span class="p">:</span><span class="mf">5.7</span>
        
<span class="c1"># postgresql 컨테이너 생성
</span><span class="n">docker</span> <span class="n">run</span> <span class="o">--</span><span class="n">name</span> <span class="n">postgresql1</span> <span class="o">-</span><span class="n">p</span> <span class="mi">5432</span><span class="p">:</span><span class="mi">5432</span> <span class="o">-</span><span class="n">e</span> <span class="n">POSTGRES_PASSWORD</span><span class="o">=</span><span class="mi">1234</span> <span class="o">-</span><span class="n">e</span> <span class="n">POSTGRES_USER</span><span class="o">=</span><span class="n">carl020958</span> <span class="o">-</span><span class="n">e</span> <span class="n">POSTGRES_DB</span><span class="o">=</span><span class="n">first_postgres</span> <span class="o">-</span><span class="n">d</span> <span class="n">postgres</span>
</code></pre></div></div>

<hr />

<h3 id="docker-mysql-sql-dump">DOCKER MYSQL sql dump</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># local directory에서 docker container으로 cp docker cp [file/directory] [container_id:/home]
</span><span class="n">docker</span> <span class="n">cp</span> <span class="n">emp</span> <span class="n">fad2828c2116</span><span class="p">:</span><span class="o">/</span><span class="n">home</span>
<span class="n">docker</span> <span class="n">cp</span> <span class="n">employees</span> <span class="n">fad2828c2116</span><span class="p">:</span><span class="o">/</span><span class="n">home</span>

<span class="c1"># docker을 통해 MySQL 서버에 로그인 docker exec -it [mysql container_id] /bin/bash
</span><span class="n">docker</span> <span class="k">exec</span> <span class="o">-</span><span class="n">it</span> <span class="n">mysql1</span> <span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">bash</span>

<span class="c1"># mysql -p[password]
</span><span class="n">mysql</span> <span class="o">-</span><span class="n">p1234</span>

<span class="c1"># mysql 서버에서 실행
</span><span class="n">source</span> <span class="n">home</span><span class="o">/</span><span class="n">emp</span><span class="o">/</span><span class="n">createTable</span><span class="p">.</span><span class="n">sql</span>
<span class="n">source</span> <span class="n">home</span><span class="o">/</span><span class="n">emp</span><span class="o">/</span><span class="n">insertTable</span><span class="p">.</span><span class="n">sql</span>
<span class="n">soure</span> <span class="n">home</span><span class="o">/</span><span class="n">employees</span><span class="o">/</span><span class="n">employees</span><span class="p">.</span><span class="n">sql</span>
<span class="c1"># employees.sql의 source의 directory 확인!
</span></code></pre></div></div>

<hr />
:ET