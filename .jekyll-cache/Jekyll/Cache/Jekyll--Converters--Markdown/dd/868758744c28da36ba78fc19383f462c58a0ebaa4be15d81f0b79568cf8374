I"*h<hr />
<h3 id="writing-efficient-python-code">Writing Efficient Python Code</h3>
<ul>
  <li>PART4</li>
  <li><code class="language-plaintext highlighter-rouge">iterrows</code>를 통해 row별 iterration 가능
    <ul>
      <li><code class="language-plaintext highlighter-rouge">iterrows</code>를 쓸 경우 index와 pandas Series로 구성되어 있는 tuple을 반환</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">itertuples</code>를 통해 row별 iterration 가능
    <ul>
      <li><code class="language-plaintext highlighter-rouge">itertuples</code>를 쓸 경우 namedtuple 형태를 반환</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">pd.applys</code>을 통해 loop 대체 가능
    <ul>
      <li>0: columns, 1: rows</li>
    </ul>
  </li>
  <li>효율성: <code class="language-plaintext highlighter-rouge">.values</code> &gt; <code class="language-plaintext highlighter-rouge">pd.applys</code> &gt; <code class="language-plaintext highlighter-rouge">itertuples</code> &gt; <code class="language-plaintext highlighter-rouge">iterrows</code></li>
</ul>

<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># import data
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">baseball_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'baseball_stats.csv'</span><span class="p">)</span>
<span class="n">baseball_df</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Team</th>
      <th>League</th>
      <th>Year</th>
      <th>RS</th>
      <th>RA</th>
      <th>W</th>
      <th>OBP</th>
      <th>SLG</th>
      <th>BA</th>
      <th>Playoffs</th>
      <th>RankSeason</th>
      <th>RankPlayoffs</th>
      <th>G</th>
      <th>OOBP</th>
      <th>OSLG</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>ARI</td>
      <td>NL</td>
      <td>2012</td>
      <td>734</td>
      <td>688</td>
      <td>81</td>
      <td>0.328</td>
      <td>0.418</td>
      <td>0.259</td>
      <td>0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>162</td>
      <td>0.317</td>
      <td>0.415</td>
    </tr>
    <tr>
      <th>1</th>
      <td>ATL</td>
      <td>NL</td>
      <td>2012</td>
      <td>700</td>
      <td>600</td>
      <td>94</td>
      <td>0.320</td>
      <td>0.389</td>
      <td>0.247</td>
      <td>1</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>162</td>
      <td>0.306</td>
      <td>0.378</td>
    </tr>
    <tr>
      <th>2</th>
      <td>BAL</td>
      <td>AL</td>
      <td>2012</td>
      <td>712</td>
      <td>705</td>
      <td>93</td>
      <td>0.311</td>
      <td>0.417</td>
      <td>0.247</td>
      <td>1</td>
      <td>5.0</td>
      <td>4.0</td>
      <td>162</td>
      <td>0.315</td>
      <td>0.403</td>
    </tr>
    <tr>
      <th>3</th>
      <td>BOS</td>
      <td>AL</td>
      <td>2012</td>
      <td>734</td>
      <td>806</td>
      <td>69</td>
      <td>0.315</td>
      <td>0.415</td>
      <td>0.260</td>
      <td>0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>162</td>
      <td>0.331</td>
      <td>0.428</td>
    </tr>
    <tr>
      <th>4</th>
      <td>CHC</td>
      <td>NL</td>
      <td>2012</td>
      <td>613</td>
      <td>759</td>
      <td>61</td>
      <td>0.302</td>
      <td>0.378</td>
      <td>0.240</td>
      <td>0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>162</td>
      <td>0.335</td>
      <td>0.424</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span><span class="p">,</span><span class="n">row</span> <span class="ow">in</span> <span class="n">baseball_df</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">iterrows</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">row</span><span class="p">)</span>


<span class="k">for</span> <span class="n">series</span> <span class="ow">in</span> <span class="n">baseball_df</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">iterrows</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">series</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="s">'Team'</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0 Team              ARI
League             NL
Year             2012
RS                734
RA                688
W                  81
OBP             0.328
SLG             0.418
BA              0.259
Playoffs            0
RankSeason        NaN
RankPlayoffs      NaN
G                 162
OOBP            0.317
OSLG            0.415
Name: 0, dtype: object
ARI
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">calc_run_diff</span><span class="p">(</span><span class="n">run_s</span><span class="p">,</span> <span class="n">run_a</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">run_s</span> <span class="o">-</span> <span class="n">run_a</span> 

<span class="n">run_diffs</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span><span class="n">row</span> <span class="ow">in</span> <span class="n">baseball_df</span><span class="p">.</span><span class="n">iterrows</span><span class="p">():</span>
    <span class="n">run_scored</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s">'RS'</span><span class="p">]</span>
    <span class="n">run_allowed</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s">'RA'</span><span class="p">]</span>
    
    <span class="n">run_diff</span> <span class="o">=</span> <span class="n">calc_run_diff</span><span class="p">(</span><span class="n">run_scored</span><span class="p">,</span> <span class="n">run_allowed</span><span class="p">)</span>
    
    <span class="n">run_diffs</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">run_diff</span><span class="p">)</span>
    
<span class="n">baseball_df</span><span class="p">[</span><span class="s">'RD'</span><span class="p">]</span> <span class="o">=</span> <span class="n">run_diffs</span>

<span class="n">baseball_df</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Team</th>
      <th>League</th>
      <th>Year</th>
      <th>RS</th>
      <th>RA</th>
      <th>W</th>
      <th>OBP</th>
      <th>SLG</th>
      <th>BA</th>
      <th>Playoffs</th>
      <th>RankSeason</th>
      <th>RankPlayoffs</th>
      <th>G</th>
      <th>OOBP</th>
      <th>OSLG</th>
      <th>RD</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>ARI</td>
      <td>NL</td>
      <td>2012</td>
      <td>734</td>
      <td>688</td>
      <td>81</td>
      <td>0.328</td>
      <td>0.418</td>
      <td>0.259</td>
      <td>0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>162</td>
      <td>0.317</td>
      <td>0.415</td>
      <td>46</td>
    </tr>
    <tr>
      <th>1</th>
      <td>ATL</td>
      <td>NL</td>
      <td>2012</td>
      <td>700</td>
      <td>600</td>
      <td>94</td>
      <td>0.320</td>
      <td>0.389</td>
      <td>0.247</td>
      <td>1</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>162</td>
      <td>0.306</td>
      <td>0.378</td>
      <td>100</td>
    </tr>
    <tr>
      <th>2</th>
      <td>BAL</td>
      <td>AL</td>
      <td>2012</td>
      <td>712</td>
      <td>705</td>
      <td>93</td>
      <td>0.311</td>
      <td>0.417</td>
      <td>0.247</td>
      <td>1</td>
      <td>5.0</td>
      <td>4.0</td>
      <td>162</td>
      <td>0.315</td>
      <td>0.403</td>
      <td>7</td>
    </tr>
    <tr>
      <th>3</th>
      <td>BOS</td>
      <td>AL</td>
      <td>2012</td>
      <td>734</td>
      <td>806</td>
      <td>69</td>
      <td>0.315</td>
      <td>0.415</td>
      <td>0.260</td>
      <td>0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>162</td>
      <td>0.331</td>
      <td>0.428</td>
      <td>-72</td>
    </tr>
    <tr>
      <th>4</th>
      <td>CHC</td>
      <td>NL</td>
      <td>2012</td>
      <td>613</td>
      <td>759</td>
      <td>61</td>
      <td>0.302</td>
      <td>0.378</td>
      <td>0.240</td>
      <td>0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>162</td>
      <td>0.335</td>
      <td>0.424</td>
      <td>-146</td>
    </tr>
  </tbody>
</table>
</div>

<h3 id="iterrows">iterrows</h3>
<ul>
  <li>1) loop over pit_df and print each row</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span><span class="p">,</span><span class="n">row</span> <span class="ow">in</span> <span class="n">baseball_df</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">iterrows</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">row</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0 Team              ARI
League             NL
Year             2012
RS                734
RA                688
W                  81
OBP             0.328
SLG             0.418
BA              0.259
Playoffs            0
RankSeason        NaN
RankPlayoffs      NaN
G                 162
OOBP            0.317
OSLG            0.415
Name: 0, dtype: object
</code></pre></div></div>

<h3 id="itertuples">itertuples</h3>
<ul>
  <li>In what year within your DataFrame did the New York Yankees have the highest run differential?</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">yankees_df</span> <span class="o">=</span> <span class="n">baseball_df</span><span class="p">[</span><span class="n">baseball_df</span><span class="p">.</span><span class="n">Team</span> <span class="o">==</span> <span class="s">'NYY'</span><span class="p">]</span>

<span class="n">run_diff</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">yankees_df</span><span class="p">.</span><span class="n">itertuples</span><span class="p">():</span>
    <span class="n">RS</span> <span class="o">=</span> <span class="n">row</span><span class="p">.</span><span class="n">RS</span>
    <span class="n">RA</span> <span class="o">=</span> <span class="n">row</span><span class="p">.</span><span class="n">RA</span>
    <span class="n">run_diff</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="n">calc_run_diff</span><span class="p">(</span><span class="n">RS</span><span class="p">,</span> <span class="n">RA</span><span class="p">)))</span>

<span class="n">yankees_df</span><span class="p">[</span><span class="s">'RD'</span><span class="p">]</span><span class="o">=</span> <span class="n">run_diff</span>

<span class="n">yankees_df</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'RD'</span><span class="p">,</span> <span class="n">ascending</span> <span class="o">=</span> <span class="mi">0</span><span class="p">).</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Team</th>
      <th>League</th>
      <th>Year</th>
      <th>RS</th>
      <th>RA</th>
      <th>W</th>
      <th>OBP</th>
      <th>SLG</th>
      <th>BA</th>
      <th>Playoffs</th>
      <th>RankSeason</th>
      <th>RankPlayoffs</th>
      <th>G</th>
      <th>OOBP</th>
      <th>OSLG</th>
      <th>RD</th>
      <th>WP</th>
      <th>WP_preds</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>439</th>
      <td>NYY</td>
      <td>AL</td>
      <td>1998</td>
      <td>965</td>
      <td>656</td>
      <td>114</td>
      <td>0.364</td>
      <td>0.460</td>
      <td>0.288</td>
      <td>1</td>
      <td>1.0</td>
      <td>1.0</td>
      <td>162</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>309</td>
      <td>0.70</td>
      <td>0.68</td>
    </tr>
    <tr>
      <th>48</th>
      <td>NYY</td>
      <td>AL</td>
      <td>2011</td>
      <td>867</td>
      <td>657</td>
      <td>97</td>
      <td>0.343</td>
      <td>0.444</td>
      <td>0.263</td>
      <td>1</td>
      <td>2.0</td>
      <td>4.0</td>
      <td>162</td>
      <td>0.322</td>
      <td>0.399</td>
      <td>210</td>
      <td>0.60</td>
      <td>0.64</td>
    </tr>
    <tr>
      <th>468</th>
      <td>NYY</td>
      <td>AL</td>
      <td>1997</td>
      <td>891</td>
      <td>688</td>
      <td>96</td>
      <td>0.362</td>
      <td>0.436</td>
      <td>0.287</td>
      <td>1</td>
      <td>3.0</td>
      <td>4.0</td>
      <td>162</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>203</td>
      <td>0.59</td>
      <td>0.63</td>
    </tr>
    <tr>
      <th>319</th>
      <td>NYY</td>
      <td>AL</td>
      <td>2002</td>
      <td>897</td>
      <td>697</td>
      <td>103</td>
      <td>0.354</td>
      <td>0.455</td>
      <td>0.275</td>
      <td>1</td>
      <td>1.0</td>
      <td>4.0</td>
      <td>161</td>
      <td>0.309</td>
      <td>0.395</td>
      <td>200</td>
      <td>0.64</td>
      <td>0.62</td>
    </tr>
    <tr>
      <th>168</th>
      <td>NYY</td>
      <td>AL</td>
      <td>2007</td>
      <td>968</td>
      <td>777</td>
      <td>94</td>
      <td>0.366</td>
      <td>0.463</td>
      <td>0.290</td>
      <td>1</td>
      <td>2.0</td>
      <td>4.0</td>
      <td>162</td>
      <td>0.340</td>
      <td>0.417</td>
      <td>191</td>
      <td>0.58</td>
      <td>0.61</td>
    </tr>
  </tbody>
</table>
</div>

<h3 id="pdapply">pd.apply</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># column sum
</span><span class="n">baseball_df</span><span class="p">[[</span><span class="s">'RS'</span><span class="p">,</span> <span class="s">'RA'</span><span class="p">]].</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>RS    880981
RA    880981
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># row sum
</span><span class="n">baseball_df</span><span class="p">[[</span><span class="s">'RS'</span><span class="p">,</span> <span class="s">'RA'</span><span class="p">]].</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0       1422
1       1300
2       1417
3       1540
4       1372
        ... 
1227    1464
1228    1332
1229    1568
1230    1438
1231    1315
Length: 1232, dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">text_playoffs</span><span class="p">(</span><span class="n">num_playoffs</span><span class="p">):</span> 
    <span class="k">if</span> <span class="n">num_playoffs</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">'Yes'</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">'No'</span> 

<span class="n">baseball_df</span><span class="p">[</span><span class="s">'Playoffs'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="n">text_playoffs</span><span class="p">)</span>

<span class="c1"># 위와 같음
# baseball_df.apply(lambda row: text_playoffs(row['Playoffs']), axis=1)
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0        No
1       Yes
2       Yes
3        No
4        No
       ... 
1227     No
1228     No
1229    Yes
1230     No
1231     No
Name: Playoffs, Length: 1232, dtype: object
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">calc_win_perc</span><span class="p">(</span><span class="n">wins</span><span class="p">,</span> <span class="n">games_played</span><span class="p">):</span>
    <span class="n">win_perc</span> <span class="o">=</span> <span class="n">wins</span> <span class="o">/</span> <span class="n">games_played</span>
    <span class="k">return</span> <span class="n">np</span><span class="p">.</span><span class="nb">round</span><span class="p">(</span><span class="n">win_perc</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="n">win_percs</span> <span class="o">=</span> <span class="n">yankees_df</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="n">calc_win_perc</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="s">'W'</span><span class="p">],</span> <span class="n">row</span><span class="p">[</span><span class="s">'G'</span><span class="p">]),</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">yankees_df</span><span class="p">[</span><span class="s">'WP'</span><span class="p">]</span> <span class="o">=</span> <span class="n">win_percs</span>

<span class="k">print</span><span class="p">(</span><span class="n">yankees_df</span><span class="p">[</span><span class="n">yankees_df</span><span class="p">[</span><span class="s">'WP'</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mf">0.50</span><span class="p">].</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    Team League  Year   RS   RA    W    OBP    SLG     BA  Playoffs  \
18   NYY     AL  2012  804  668   95  0.337  0.453  0.265         1   
48   NYY     AL  2011  867  657   97  0.343  0.444  0.263         1   
78   NYY     AL  2010  859  693   95  0.350  0.436  0.267         1   
108  NYY     AL  2009  915  753  103  0.362  0.478  0.283         1   
138  NYY     AL  2008  789  727   89  0.342  0.427  0.271         0   

     RankSeason  RankPlayoffs    G   OOBP   OSLG   RD    WP  
18          3.0           3.0  162  0.311  0.419  136  0.59  
48          2.0           4.0  162  0.322  0.399  210  0.60  
78          3.0           3.0  162  0.322  0.399  166  0.59  
108         1.0           1.0  162  0.327  0.408  162  0.64  
138         NaN           NaN  162  0.329  0.405   62  0.55  
</code></pre></div></div>

<ul>
  <li>Pandas series에 .values를 사용해 numpy array로 바꾼 후 연산하면 빠르게 연산 가능</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">win_percs_np</span> <span class="o">=</span> <span class="n">calc_win_perc</span><span class="p">(</span><span class="n">baseball_df</span><span class="p">[</span><span class="s">'W'</span><span class="p">].</span><span class="n">values</span><span class="p">,</span> <span class="n">baseball_df</span><span class="p">[</span><span class="s">'G'</span><span class="p">].</span><span class="n">values</span><span class="p">)</span>

<span class="n">baseball_df</span><span class="p">[</span><span class="s">'WP'</span><span class="p">]</span> <span class="o">=</span> <span class="n">win_percs_np</span>
<span class="n">baseball_df</span><span class="p">[</span><span class="s">'WP'</span><span class="p">].</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0    0.50
1    0.58
2    0.57
3    0.43
4    0.38
Name: WP, dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">win_perc_preds_loop</span> <span class="o">=</span> <span class="p">[]</span>

<span class="c1"># Use a loop and .itertuples() to collect each row's predicted win percentage
</span><span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">baseball_df</span><span class="p">.</span><span class="n">itertuples</span><span class="p">():</span>
    <span class="n">runs_scored</span> <span class="o">=</span> <span class="n">row</span><span class="p">.</span><span class="n">RS</span>
    <span class="n">runs_allowed</span> <span class="o">=</span> <span class="n">row</span><span class="p">.</span><span class="n">RA</span>
    <span class="n">win_perc_pred</span> <span class="o">=</span> <span class="n">predict_win_perc</span><span class="p">(</span><span class="n">runs_scored</span><span class="p">,</span> <span class="n">runs_allowed</span><span class="p">)</span>
    <span class="n">win_perc_preds_loop</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">win_perc_pred</span><span class="p">)</span>

<span class="c1"># Apply predict_win_perc to each row of the DataFrame
</span><span class="n">win_perc_preds_apply</span> <span class="o">=</span> <span class="n">baseball_df</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="n">predict_win_perc</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="s">'RS'</span><span class="p">],</span> <span class="n">row</span><span class="p">[</span><span class="s">'RA'</span><span class="p">]),</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># Calculate the win percentage predictions using NumPy arrays
</span><span class="n">win_perc_preds_np</span> <span class="o">=</span> <span class="n">predict_win_perc</span><span class="p">(</span><span class="n">baseball_df</span><span class="p">[</span><span class="s">'RS'</span><span class="p">].</span><span class="n">values</span><span class="p">,</span> <span class="n">baseball_df</span><span class="p">[</span><span class="s">'RA'</span><span class="p">].</span><span class="n">values</span><span class="p">)</span>
<span class="n">baseball_df</span><span class="p">[</span><span class="s">'WP_preds'</span><span class="p">]</span> <span class="o">=</span> <span class="n">win_perc_preds_np</span>
<span class="k">print</span><span class="p">(</span><span class="n">baseball_df</span><span class="p">.</span><span class="n">head</span><span class="p">())</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  Team League  Year   RS   RA   W    OBP    SLG     BA  Playoffs  RankSeason  \
0  ARI     NL  2012  734  688  81  0.328  0.418  0.259         0         NaN   
1  ATL     NL  2012  700  600  94  0.320  0.389  0.247         1         4.0   
2  BAL     AL  2012  712  705  93  0.311  0.417  0.247         1         5.0   
3  BOS     AL  2012  734  806  69  0.315  0.415  0.260         0         NaN   
4  CHC     NL  2012  613  759  61  0.302  0.378  0.240         0         NaN   

   RankPlayoffs    G   OOBP   OSLG   RD    WP  WP_preds  
0           NaN  162  0.317  0.415   46  0.50      0.53  
1           5.0  162  0.306  0.378  100  0.58      0.58  
2           4.0  162  0.315  0.403    7  0.57      0.50  
3           NaN  162  0.331  0.428  -72  0.43      0.45  
4           NaN  162  0.335  0.424 -146  0.38      0.39  
</code></pre></div></div>

<hr />
:ET