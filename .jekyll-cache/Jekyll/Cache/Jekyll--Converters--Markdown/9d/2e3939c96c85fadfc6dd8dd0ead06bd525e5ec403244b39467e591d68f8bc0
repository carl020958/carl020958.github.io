I"‡2<hr />
<h3 id="algorithm-√ºbung---programmers">ALGORITHM √úbung - Programmers</h3>
<ul>
  <li>ÏïåÍ≥†Î¶¨Ï¶ò Î¨∏Ï†ú ÌíÄÏù¥Î•º ÌÜµÌïú ÏΩîÎî© ÌÖåÏä§Ìä∏ Ïó∞Ïäµ</li>
</ul>

<hr />

<h3 id="3Ï∞®-ÌååÏùºÎ™Ö-Ï†ïÎ†¨">[3Ï∞®] ÌååÏùºÎ™Ö Ï†ïÎ†¨</h3>
<ul>
  <li>29/11/2021</li>
</ul>
<p align="center">
    <img src="/img/backend/algorithm/coding_test/coding_test65_1.png" align="center" />
    <img src="/img/backend/algorithm/coding_test/coding_test65_2.png" align="center" />
</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">re</span>

<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">files</span><span class="p">):</span>
    <span class="n">files</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span>
                                <span class="p">(</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s">"[a-zA-Z-.\s]+"</span><span class="p">,</span> <span class="n">x</span><span class="p">.</span><span class="n">lower</span><span class="p">())[</span><span class="mi">0</span><span class="p">],</span>
                                <span class="nb">int</span><span class="p">(</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s">"[0-9]+"</span><span class="p">,</span> <span class="n">x</span><span class="p">)[</span><span class="mi">0</span><span class="p">]))</span>
                   <span class="p">)</span>
    <span class="k">return</span> <span class="n">files</span>
</code></pre></div></div>

<hr />

<h3 id="3Ï∞®-ÏïïÏ∂ï">[3Ï∞®] ÏïïÏ∂ï</h3>
<ul>
  <li>30/11/2021</li>
</ul>
<p align="center">
    <img src="/img/backend/algorithm/coding_test/coding_test66_1.png" align="center" />
    <img src="/img/backend/algorithm/coding_test/coding_test66_2.png" align="center" />
</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">msg</span><span class="p">):</span>
    <span class="n">wordDict</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="s">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span><span class="p">,</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">27</span><span class="p">)))</span>

    <span class="n">number</span> <span class="o">=</span> <span class="mi">27</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">while</span> <span class="n">msg</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">wordDict</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span>
        <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">while</span> <span class="n">msg</span><span class="p">[:</span><span class="n">i</span><span class="p">]</span> <span class="ow">in</span> <span class="n">wordDict</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span>
            <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="n">answer</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">wordDict</span><span class="p">[</span><span class="n">msg</span><span class="p">[:</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]])</span>
        <span class="n">wordDict</span><span class="p">[</span><span class="n">msg</span><span class="p">[:</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">number</span>
        <span class="n">number</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="n">msg</span> <span class="o">=</span> <span class="n">msg</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">:]</span>

    <span class="n">answer</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">wordDict</span><span class="p">[</span><span class="n">msg</span><span class="p">])</span>

    <span class="k">return</span> <span class="n">answer</span>
</code></pre></div></div>

<hr />

<h3 id="Ï£ºÏãùÍ∞ÄÍ≤©">Ï£ºÏãùÍ∞ÄÍ≤©</h3>
<ul>
  <li>30/11/2021</li>
</ul>
<p align="center">
    <img src="/img/backend/algorithm/coding_test/coding_test67.png" align="center" />
</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">prices</span><span class="p">):</span>
    
    <span class="n">ans</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="c1"># loop for every price
</span>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">prices</span><span class="p">)):</span>
        <span class="n">times</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="c1"># loop for every price after the current price
</span>        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">prices</span><span class="p">)</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
            <span class="c1"># plus 1 second
</span>            <span class="n">times</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="c1"># if the price is bigger than the current price, stop
</span>            <span class="k">if</span> <span class="n">prices</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">prices</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]:</span>
                    <span class="k">break</span>

        <span class="n">ans</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">times</span><span class="p">)</span>
        
    <span class="k">return</span> <span class="n">ans</span>
</code></pre></div></div>

<hr />

<h3 id="Í∏∞Îä•Í∞úÎ∞ú">Í∏∞Îä•Í∞úÎ∞ú</h3>
<ul>
  <li>30/11/2021</li>
</ul>
<p align="center">
    <img src="/img/backend/algorithm/coding_test/coding_test67.png" align="center" />
</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">deque</span>


<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">progresses</span><span class="p">,</span> <span class="n">speeds</span><span class="p">):</span>
    <span class="c1"># used deque for leftpop
</span>    <span class="n">progresses</span><span class="p">,</span><span class="n">speeds</span> <span class="o">=</span> <span class="n">deque</span><span class="p">(</span><span class="n">progresses</span><span class="p">),</span><span class="n">deque</span><span class="p">(</span><span class="n">speeds</span><span class="p">)</span>
    
    <span class="n">ans</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="c1"># loop until progresses is empty
</span>    <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">progresses</span><span class="p">):</span>
        <span class="c1"># for every loop add each speed to progress
</span>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">progresses</span><span class="p">)):</span>
            <span class="n">progresses</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="n">speeds</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="c1"># initalize number counting numbers of progress above 100
</span>        <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="c1"># loop until the progresses[0] is below 100
</span>        <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">progresses</span><span class="p">)</span> <span class="ow">and</span> <span class="n">progresses</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">100</span><span class="p">:</span>
            <span class="n">progresses</span><span class="p">.</span><span class="n">popleft</span><span class="p">()</span>
            <span class="n">speeds</span><span class="p">.</span><span class="n">popleft</span><span class="p">()</span>
            <span class="c1"># add num for every progresses[0] above 100
</span>            <span class="n">num</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="c1"># add num to ans if num is bigger than 0
</span>        <span class="k">if</span> <span class="n">num</span><span class="p">:</span>
            <span class="n">ans</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">ans</span>

<span class="c1"># Îã§Î•∏ ÏÇ¨ÎûåÏùò Ï¢ãÏùÄ ÌíÄÏù¥
</span><span class="n">ef</span> <span class="n">solution</span><span class="p">(</span><span class="n">progresses</span><span class="p">,</span> <span class="n">speeds</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">progresses</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">speeds</span><span class="p">)</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">time</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">progresses</span><span class="p">)</span><span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">progresses</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">time</span><span class="o">*</span><span class="n">speeds</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">&gt;=</span> <span class="mi">100</span><span class="p">:</span>
            <span class="n">progresses</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
            <span class="n">speeds</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
            <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">answer</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
                <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">time</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="n">answer</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">answer</span>
</code></pre></div></div>

<hr />
:ET